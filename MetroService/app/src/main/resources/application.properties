#kafka
spring.kafka.producer.bootstrap-servers= localhost:9092
spring.kafka.topic.name=qrDetail
spring.kafka.admin.auto.create=true
spring.kafka.properties.allow.auto.create.topics=true
spring.kafka.producer.retries=5
spring.kafka.producer.acks=all
spring.kafka.producer.properties.enable.idempotence=true
spring.kafka.admin.auto-create=true
auto.create.topics.enable=true
spring.kafka.template.default-topic=qrDetail
spring.kafka.producer.key.serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value.serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.group-id=booking-info-group

#database
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://${MYSQL_HOST:10.211.55.3}:${MYSQL_PORT:3306}/${MYSQL_DB:authservice}?useSSL=false&useUnicode=yes&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
#spring.datasource.url=jdbc:mysql://10.211.55.3:3306/authservice?useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.url=jdbc:mysql://localhost:3306/metroservice
spring.datasource.username=root
spring.datasource.password=ayush
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.hbm2ddl.auto=update
spring.sql.init.mode=always

server.port=9892